{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\sehan\\\\Documents\\\\ReactFiles\\\\crwn-clothes\\\\crwn-clothes\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\sehan\\\\Documents\\\\ReactFiles\\\\crwn-clothes\\\\crwn-clothes\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"C:\\\\Users\\\\sehan\\\\Documents\\\\ReactFiles\\\\crwn-clothes\\\\crwn-clothes\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _slicedToArray from\"C:\\\\Users\\\\sehan\\\\Documents\\\\ReactFiles\\\\crwn-clothes\\\\crwn-clothes\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import FormInput from'../form-input/form-input.component';import CustomButton from'../custom-button/custom-button.component';import{signUpStart as _signUpStart}from'../../redux/user/user.actions';import{SignUpContainer,SignUpTitle}from'./sign-up.styles';import{connect}from'react-redux';export var SignUp=function SignUp(_ref){var signUpStart=_ref.signUpStart;var _useState=useState({displayName:'',email:'',password:'',confirmPassword:''}),_useState2=_slicedToArray(_useState,2),userCredentials=_useState2[0],setCredentials=_useState2[1];var displayName=userCredentials.displayName,email=userCredentials.email,password=userCredentials.password,confirmPassword=userCredentials.confirmPassword;var handleSubmit=function handleSubmit(event){return _regeneratorRuntime.async(function handleSubmit$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();if(!(password!==confirmPassword)){_context.next=4;break;}alert(\"passwords don't match\");return _context.abrupt(\"return\");case 4:signUpStart({email:email,password:password,displayName:displayName});case 5:case\"end\":return _context.stop();}}});};var handleChange=function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setCredentials(_objectSpread({},userCredentials,_defineProperty({},name,value)));};return React.createElement(SignUpContainer,null,React.createElement(SignUpTitle,null,\"I do not have a account\"),React.createElement(\"span\",null,\"Sign up with your email and password\"),React.createElement(\"form\",{className:\"sign-up-form\",onSubmit:handleSubmit},React.createElement(FormInput,{type:\"text\",name:\"displayName\",value:displayName,onChange:handleChange,label:\"Display Name\",required:true}),React.createElement(FormInput,{type:\"email\",name:\"email\",value:email,onChange:handleChange,label:\"Email\",required:true}),React.createElement(FormInput,{type:\"password\",name:\"password\",value:password,onChange:handleChange,label:\"Password\",required:true}),React.createElement(FormInput,{type:\"password\",name:\"confirmPassword\",value:confirmPassword,onChange:handleChange,label:\"Confirm Password\",required:true}),React.createElement(CustomButton,{type:\"submit\"},\"SIGN UP\")));};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{signUpStart:function signUpStart(userCredentials){return dispatch(_signUpStart(userCredentials));}};};export default connect(null,mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/sehan/Documents/ReactFiles/crwn-clothes/crwn-clothes/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","signUpStart","SignUpContainer","SignUpTitle","connect","SignUp","displayName","email","password","confirmPassword","userCredentials","setCredentials","handleSubmit","event","preventDefault","alert","handleChange","target","name","value","mapDispatchToProps","dispatch"],"mappings":"oxBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAA+B,OAA/B,CAEA,MAAOC,CAAAA,SAAP,KAAsB,oCAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,0CAAzB,CACA,OAASC,WAAW,GAAXA,CAAAA,YAAT,KAA4B,+BAA5B,CAEA,OAASC,eAAT,CAA0BC,WAA1B,KAA6C,kBAA7C,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAmB,IAAjBJ,CAAAA,WAAiB,MAAjBA,WAAiB,eAEGH,QAAQ,CAAC,CACvBQ,WAAW,CAAE,EADU,CAEvBC,KAAK,CAAE,EAFgB,CAGvBC,QAAQ,CAAE,EAHa,CAIvBC,eAAe,CAAE,EAJM,CAAD,CAFX,wCAEhCC,eAFgC,eAEfC,cAFe,kBAQ/BL,CAAAA,WAR+B,CAQmBI,eARnB,CAQ/BJ,WAR+B,CAQlBC,KARkB,CAQmBG,eARnB,CAQlBH,KARkB,CAQXC,QARW,CAQmBE,eARnB,CAQXF,QARW,CAQDC,eARC,CAQmBC,eARnB,CAQDD,eARC,CAUvC,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAMC,KAAN,wHACnBA,KAAK,CAACC,cAAN,GADmB,KAGfN,QAAQ,GAAKC,eAHE,0BAIjBM,KAAK,CAAC,uBAAD,CAAL,CAJiB,wCAQnBd,WAAW,CAAC,CAACM,KAAK,CAALA,KAAD,CAAQC,QAAQ,CAARA,QAAR,CAAkBF,WAAW,CAAXA,WAAlB,CAAD,CAAX,CARmB,8CAArB,CAWA,GAAMU,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAH,KAAK,CAAI,mBACJA,KAAK,CAACI,MADF,CACpBC,IADoB,eACpBA,IADoB,CACdC,KADc,eACdA,KADc,CAE5BR,cAAc,kBAAKD,eAAL,oBAAuBQ,IAAvB,CAA8BC,KAA9B,GAAd,CACD,CAHD,CAKE,MACE,qBAAC,eAAD,MACE,oBAAC,WAAD,gCADF,CAEE,uEAFF,CAGE,4BAAM,SAAS,CAAC,cAAhB,CAA+B,QAAQ,CAAEP,YAAzC,EACE,oBAAC,SAAD,EACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAC,aAFP,CAGE,KAAK,CAAEN,WAHT,CAIE,QAAQ,CAAEU,YAJZ,CAKE,KAAK,CAAC,cALR,CAME,QAAQ,KANV,EADF,CASE,oBAAC,SAAD,EACE,IAAI,CAAC,OADP,CAEE,IAAI,CAAC,OAFP,CAGE,KAAK,CAAET,KAHT,CAIE,QAAQ,CAAES,YAJZ,CAKE,KAAK,CAAC,OALR,CAME,QAAQ,KANV,EATF,CAiBE,oBAAC,SAAD,EACE,IAAI,CAAC,UADP,CAEE,IAAI,CAAC,UAFP,CAGE,KAAK,CAAER,QAHT,CAIE,QAAQ,CAAEQ,YAJZ,CAKE,KAAK,CAAC,UALR,CAME,QAAQ,KANV,EAjBF,CAyBE,oBAAC,SAAD,EACE,IAAI,CAAC,UADP,CAEE,IAAI,CAAC,iBAFP,CAGE,KAAK,CAAEP,eAHT,CAIE,QAAQ,CAAEO,YAJZ,CAKE,KAAK,CAAC,kBALR,CAME,QAAQ,KANV,EAzBF,CAiCE,oBAAC,YAAD,EAAc,IAAI,CAAC,QAAnB,YAjCF,CAHF,CADF,CAyCD,CAnEI,CAsEP,GAAMI,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACtCpB,WAAW,CAAE,qBAACS,eAAD,QAAqBW,CAAAA,QAAQ,CAACpB,YAAW,CAACS,eAAD,CAAZ,CAA7B,EADyB,CAAL,EAAnC,CAIA,cAAeN,CAAAA,OAAO,CAAC,IAAD,CAAMgB,kBAAN,CAAP,CAAiCf,MAAjC,CAAf","sourcesContent":["import React, { useState} from 'react';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\n\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\nimport { connect } from 'react-redux';\n\nexport const SignUp = ({signUpStart}) => {\n\n  const [userCredentials, setCredentials] = useState({\n                              displayName: '',\n                              email: '',\n                              password: '',\n                              confirmPassword: ''\n                            });\n  const { displayName, email, password, confirmPassword } = userCredentials\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({email, password, displayName});\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setCredentials({...userCredentials, [name]: value });\n  };\n\n    return (\n      <SignUpContainer>\n        <SignUpTitle>I do not have a account</SignUpTitle>\n        <span>Sign up with your email and password</span>\n        <form className='sign-up-form' onSubmit={handleSubmit}>\n          <FormInput\n            type='text'\n            name='displayName'\n            value={displayName}\n            onChange={handleChange}\n            label='Display Name'\n            required\n          />\n          <FormInput\n            type='email'\n            name='email'\n            value={email}\n            onChange={handleChange}\n            label='Email'\n            required\n          />\n          <FormInput\n            type='password'\n            name='password'\n            value={password}\n            onChange={handleChange}\n            label='Password'\n            required\n          />\n          <FormInput\n            type='password'\n            name='confirmPassword'\n            value={confirmPassword}\n            onChange={handleChange}\n            label='Confirm Password'\n            required\n          />\n          <CustomButton type='submit'>SIGN UP</CustomButton>\n        </form>\n      </SignUpContainer>\n    );\n  }\n\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials))\n})\n\nexport default connect(null,mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}